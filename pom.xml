<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.baeldung.avltree</groupId>
  <artifactId>JUnit-CI</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>JUnit-CI</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.evosuite</groupId>
      <artifactId>evosuite-standalone-runtime</artifactId>
      <version>1.0.6</version>
      <scope>test</scope>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.slf4j</groupId>-->
<!--      <artifactId>slf4j-nop</artifactId>-->
<!--      <version>1.7.25</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.evosuite.plugins</groupId>
          <artifactId>evosuite-maven-plugin</artifactId>
          <version>1.0.6</version>
          <executions>
            <execution>
              <goals>
                <goal> prepare </goal>
              </goals>
              <phase> process-test-classes </phase>
            </execution>
          </executions>
        </plugin>
<!--        <plugin>-->
<!--          <groupId>org.apache.maven.plugins</groupId>-->
<!--          <artifactId>maven-surefire-plugin</artifactId>-->
<!--          <version>2.15</version>-->
<!--          <configuration>-->
<!--            &lt;!&ndash; Sets the VM argument line used when unit tests are run. &ndash;&gt;-->
<!--            <argLine>${surefireArgLine}</argLine>-->
<!--          </configuration>-->
<!--        </plugin>-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.17</version>
          <configuration>
            <properties>
              <property>
                <name>listener</name>
                <value>org.evosuite.runtime.InitializingListener</value>
              </property>
            </properties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.6</version>
          <executions>
            <!--first execution : for preparing JaCoCo runtime agent-->
            <execution>
              <id>prepare-tests</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <!--second execution : for creating code coverage reports-->
            <execution>
              <id>report</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
<!--          <executions>-->
<!--            &lt;!&ndash;-->
<!--                Prepares the property pointing to the JaCoCo runtime agent which-->
<!--                is passed as VM argument when Maven the Surefire plugin is executed.-->
<!--              &ndash;&gt;-->
<!--            <execution>-->
<!--              <id>pre-unit-test</id>-->
<!--              <goals>-->
<!--                <goal>prepare-agent</goal>-->
<!--              </goals>-->
<!--              <configuration>-->
<!--                &lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
<!--                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>-->
<!--                &lt;!&ndash;-->
<!--                    Sets the name of the property containing the settings-->
<!--                    for JaCoCo runtime agent.-->
<!--                  &ndash;&gt;-->
<!--                <propertyName>surefireArgLine</propertyName>-->
<!--              </configuration>-->
<!--            </execution>-->
<!--            &lt;!&ndash;-->
<!--                Ensures that the code coverage report for unit tests is created after-->
<!--                unit tests have been run.-->
<!--              &ndash;&gt;-->
<!--            <execution>-->
<!--              <id>post-unit-test</id>-->
<!--              <phase>test</phase>-->
<!--              <goals>-->
<!--                <goal>report</goal>-->
<!--              </goals>-->
<!--              <configuration>-->
<!--                &lt;!&ndash; Sets the path to the file which contains the execution data. &ndash;&gt;-->
<!--                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>-->
<!--                &lt;!&ndash; Sets the output directory for the code coverage report. &ndash;&gt;-->
<!--                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>-->
<!--              </configuration>-->
<!--            </execution>-->
<!--            &lt;!&ndash;-->
<!--                Prepares the property pointing to the JaCoCo runtime agent which-->
<!--                is passed as VM argument when Maven the Failsafe plugin is executed.-->
<!--              &ndash;&gt;-->
<!--          </executions>-->
        </plugin>

        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
<!--          <configuration>-->
<!--            <properties>-->
<!--              <property>-->
<!--                <name>listener</name>-->
<!--                <value>org.evosuite.runtime.InitializingListener</value>-->
<!--              </property>-->
<!--            </properties>-->
<!--          </configuration>-->
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
